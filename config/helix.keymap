/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER  1
#define RAISE  2
#define ADJUST 3

/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
    combos {
        compatible = "zmk,combos";

        gamemod {
            bindings = <&tog 5>;
            key-positions = <13 17>;
            layers = <0 5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // | GRAVE  |   1    |   2    |   3    |   4    |   5    |                                      |   6    |   7    |   8    |   9    |   0    |  DEL   |
            // |  TAB   |   Q    |   W    |   E    |   R    |   T    |                                      |   Y    |   U    |   I    |   O    |   P    |  BSPC  |
            // |  CTRL  |   A    |   S    |   D    |   F    |   G    |                                      |   H    |   J    |   K    |   L    |   ;    |   '    |
            // |  SHIFT |   Z    |   X    |   C    |   V    |   B    |  LBKT  |                    |  RBKT  |   N    |   M    |   ,    |   .    |   /    |  RET   |
            // | ADJUST |  ESC   |  ALT   |  LGUI  | EISUU  | LOWER  | SPACE  |                    |  SPACE | RAISE  |  KANA  |  LEFT  |  DOWN  |  UP    |  RIGHT |

            bindings = <
&kp ESC           &kp DEL       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMI   &kp BACKSPACE                         &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB           &kp P         &kp W                 &kp R                  &kp A      &kp F                                 &trans  &trans  &trans  &trans  &trans  &trans
&kp LANG_HANGEUL  &kp D         &kp T                 &kp H                  &kp E      &kp O                                 &trans  &trans  &trans  &trans  &trans  &trans
&sk LEFT_SHIFT    &kp Y         &kp S                 &kp N                  &kp I      &kp U          &mo 3          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&sk LCTRL         &kp LEFT_WIN  &sk LEFT_ALT          &mo 4                  &kp SPACE  &sl 1          &lt 2 ENTER    &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        swap {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |      |      |      |      |      |      |                                  |      |      |      |      |      |      |
            // |  ~   |  !   |  @   |  #   |  $   |  %   |                                  |  ^   |  &   |  *   |  (   |  )   |      |
            // |      |      |      |      |      |      |                                  |      |  _   |  +   |  {   |  }   | PIPE |
            // |      |      |      |      |      |      |  (   |                    |  )   |      |      |      | HOME | END  |      |
            // |      |      |      |      |      |      |      |                    |      |      |      |      |      |      |      |

            bindings = <
&trans        &kp GRAVE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp COLON   &kp TILDE                    &trans  &trans  &trans  &trans  &trans  &trans
&trans        &kp J      &kp M             &kp B              &kp COMMA   &kp EXCL                     &trans  &trans  &trans  &trans  &trans  &trans
&kp CAPSLOCK  &kp V      &kp C             &kp L              &kp Z       &kp Q                        &trans  &trans  &trans  &trans  &trans  &trans
&trans        &kp X      &kp G             &kp K              &kp PERIOD  &kp SLASH  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans     &trans            &trans             &trans      &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        num {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |       |       |       |       |       |                                    |       |       |       |       |       |       |
            // |   `   |   1   |   2   |   3   |   4   |   5   |                                    |   6   |   7   |   8   |   9   |   0   |  DEL  |
            // |       |  F1   |  F2   |  F3   |  F4   |  F5   |                                    |  F6   |   -   |   =   |   [   |   ]   |   \   |
            // |       |  F7   |  F8   |  F9   |  F10  |  F11  |       |                    |       |  F12  |       | PSCRN | PG_DN | PG_UP |       |
            // |       |       |       |       |       |       |       |                    |       |       |       | NEXT  | VOL-  | VOL+  | PLAY  |

            bindings = <
&trans  &none      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &none      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp MINUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp PLUS   &kp NUMBER_0  &kp PERIOD    &kp EQUAL     &kp ASTRK  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans        &trans        &trans        &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        navi_func {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |    `     |    !     |    @     |    #     |    $     |    %     |                                          |    ^     |    &     |    *     |    (     |    )     |  EP TOG  |
            // |  BT CLR  | BT SEL0  | BT SEL1  | BT SEL2  | BGT SEL3 | BT SEL4  |                                          | RGB EFF+ | RGB HUE+ | RGB SAT+ | RGB SPD+ | RGB BRI+ | RGB TOG  |
            // |  BT NXT  | OUT TOG  | OUT USB  | OUT BLE  |          |          |                                          | RGB EFF- | RGB HUE- | RGB SAT- | RGB SPD- | RGB BRI- |          |
            // |  BT PRV  |          |          |          |          |          |    {     |                    |    }     |          |          |          |          |          |          |
            // |          |          |          |          |          |          |          |                    |          |          |          |          |          |          |          |

            bindings = <
&trans  &trans          &kp HOME  &kp UP_ARROW  &kp END    &kp PG_UP                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &kp LEFT  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_SHIFT  &trans    &trans        &trans     &trans                           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans    &trans        &trans     &none          &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans    &trans        &trans     &trans         &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Setting_layer {
            bindings = <
&bt BT_CLR      &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR_ALL  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        GAME {
            bindings = <
&kp ESCAPE    &none         &none         &none         &none         &none                          &none  &none  &none  &none  &none  &none
&none         &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &none                          &none  &none  &none  &none  &none  &none
&kp NUMBER_6  &kp NUMBER_5  &kp NUMBER_3  &kp W         &none         &none                          &none  &none  &none  &none  &none  &none
&kp NUMBER_4  &kp NUMBER_2  &kp A         &kp S         &kp D         &none      &none        &none  &none  &none  &none  &none  &none  &none
&kp NUMBER_1  &none         &none         &kp SPACE     &kp SPACE     &kp SPACE  &kp SPACE    &none  &none  &none  &none  &none  &none  &none
            >;
        };
    };
};
